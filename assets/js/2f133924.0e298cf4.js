"use strict";(self.webpackChunkwiki=self.webpackChunkwiki||[]).push([[630],{3905:function(e,a,t){t.d(a,{Zo:function(){return c},kt:function(){return m}});var r=t(7294);function o(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function n(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?n(Object(t),!0).forEach((function(a){o(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):n(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,r,o=function(e,a){if(null==e)return{};var t,r,o={},n=Object.keys(e);for(r=0;r<n.length;r++)t=n[r],a.indexOf(t)>=0||(o[t]=e[t]);return o}(e,a);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)t=n[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),u=function(e){var a=r.useContext(l),t=a;return e&&(t="function"==typeof e?e(a):s(s({},a),e)),t},c=function(e){var a=u(e.components);return r.createElement(l.Provider,{value:a},e.children)},p={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},d=r.forwardRef((function(e,a){var t=e.components,o=e.mdxType,n=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(t),m=o,k=d["".concat(l,".").concat(m)]||d[m]||p[m]||n;return t?r.createElement(k,s(s({ref:a},c),{},{components:t})):r.createElement(k,s({ref:a},c))}));function m(e,a){var t=arguments,o=a&&a.mdxType;if("string"==typeof e||o){var n=t.length,s=new Array(n);s[0]=d;var i={};for(var l in a)hasOwnProperty.call(a,l)&&(i[l]=a[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var u=2;u<n;u++)s[u]=t[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},2399:function(e,a,t){t.r(a),t.d(a,{assets:function(){return c},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return p}});var r=t(7462),o=t(3366),n=(t(7294),t(3905)),s=["components"],i={},l="Quickstart Node",u={unversionedId:"Architecture Spikes/AS_1",id:"Architecture Spikes/AS_1",title:"Quickstart Node",description:"Setup inicial",source:"@site/docs/Architecture Spikes/AS_1.md",sourceDirName:"Architecture Spikes",slug:"/Architecture Spikes/AS_1",permalink:"/CasaMosaicoWiki/docs/Architecture Spikes/AS_1",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Architecture Spikes/AS_1.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"El Proyecto",permalink:"/CasaMosaicoWiki/docs/intro"},next:{title:"Taco Thursday",permalink:"/CasaMosaicoWiki/docs/Architecture Spikes/AS_2"}},c={},p=[{value:"Setup inicial",id:"setup-inicial",level:2},{value:"Creando un servidor",id:"creando-un-servidor",level:2},{value:"Tipos de DB",id:"tipos-de-db",level:2},{value:"Mensaje &quot;motivador&quot;",id:"mensaje-motivador",level:2},{value:"Mucha suerte y ojal\xe1 disfruten el experimento :)",id:"mucha-suerte-y-ojal\xe1-disfruten-el-experimento-",level:2}],d={toc:p};function m(e){var a=e.components,t=(0,o.Z)(e,s);return(0,n.kt)("wrapper",(0,r.Z)({},d,t,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"quickstart-node"},"Quickstart Node"),(0,n.kt)("h2",{id:"setup-inicial"},"Setup inicial"),(0,n.kt)("p",null,"Antes de poder empezar con el proyecto, es necesario tener instalado node. Para esto pueden ir al sitio oficial de Node, descargarlo e instalarlo:"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},(0,n.kt)("a",{parentName:"p",href:"https://nodejs.org/en/download/"},"Download | Node.js (nodejs.org)"))),(0,n.kt)("p",null,"Una vez instalado, verifiquen que se pueda llamar correctamente desde la terminal usando:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"node --version\n")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Si lo que nos devuelve es un n\xfamero de version, entonces ha sido instalado correctamente. De lo contrario, verifica que se haya instalado bien y que se haya agregado el path. Tambi\xe9n puedes intentar reiniciar tu terminal.")),(0,n.kt)("p",null,"Una vez que se haya instalado correctamente, deberemos ejecutar el siguiente comando en el directorio de nuestro proyecto para inicializar node:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"npm init -y\n")),(0,n.kt)("h2",{id:"creando-un-servidor"},"Creando un servidor"),(0,n.kt)("p",null,"Para crear un servidor, podemos hacerlo mediante una configuraci\xf3n completa de un servicio HTTP, o podemos utilizar Express, una librer\xeda que simplifica el proceso de nuestra parte. En este caso usaremos Express para agilizar el proceso."),(0,n.kt)("p",null,"Lo primero que debemos hacer es instalar express ejecutando:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"npm install express\n")),(0,n.kt)("p",null,"Una vez que tenemos eso listo, podemos crear el archivo que definir\xe1 nuestro servidor. En este caso lo llamaremos ",(0,n.kt)("strong",{parentName:"p"},"server.js"),"."),(0,n.kt)("p",null,"En server.js, lo primero que debemos hacer es importar express e inicializarlo, eso lo hacemos con las siguientes l\xedneas:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"const express = require('express');\nconst app = express();\n")),(0,n.kt)("p",null,"Luego, debemos definir c\xf3mo vamos a manejar las peticiones GET (tambi\xe9n se puede definir c\xf3mo se maneja una petici\xf3n POST, y otros tipos de peticiones, pero por el momento s\xf3lo manejaremos GET). Esto lo hacemos con las siguientes l\xedneas:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"app.get('/', (req, res) => {\n    res.send('Hello World!')\n});\n")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Como podemos observar, el primer par\xe1metro es la ruta de nuestro URL, en este caso la respuesta que estamos definiendo s\xf3lo funcionar\xe1 con la ruta '/'.")),(0,n.kt)("p",null,"Y por \xfaltimo, debemos inicializar el servidor, para esto s\xf3lo debemos indicarle a express sobre qu\xe9 puerto debe funcionar:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"app.listen(3000, () => console.log('Server is running on port 3000'));\n")),(0,n.kt)("p",null,"Ejecutamos lo siguiente:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"node server.js\n")),(0,n.kt)("p",null,"Y listo, nuestro servidor ya estar\xe1 activo en ",(0,n.kt)("strong",{parentName:"p"},"localhost:3000"),"."),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Si buscas un tutorial m\xe1s completo, que explique c\xf3mo utilizar archivos HTML para el front, puedes consultar ",(0,n.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=wxbQP1LMZsw"},"este video"),".")),(0,n.kt)("h2",{id:"tipos-de-db"},"Tipos de DB"),(0,n.kt)("p",null,'Con node js tenemos 2 opciones para bases de datos, una es usar una base de datos tipo SQL (relacional), y otra es NoSQL (no relacional). Para t\xe9rminos de simplicidad, en este "bootcamp" se sugiere que usemos versiones ligeras (no aptas para un producto escalable), que nos permitan probar r\xe1pidamente el funcionamiento de cada tipo de base de datos con Node.'),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Para quienes quieran probar SQL, se sugiere usar ",(0,n.kt)("strong",{parentName:"p"},"SQLite"),"."),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Si buscan un video tutorial para empezar ",(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=xDYx5UdHwv0"},"este video es una opci\xf3n"),"."))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Para quienes busquen probar NoSQL, se sugiere usar ",(0,n.kt)("strong",{parentName:"p"},"NeDB"),"."),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Si buscan un video de apoyo para entender c\xf3mo funciona, ",(0,n.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=xVYa20DCUv0"},"este video")," es una opci\xf3n. (este video es parte de una serie de tutoriales de Node, por lo que asume que ya entiendes como tratar una petici\xf3n POST, si gustas puedes consultar los videos anteriores de la serie para una mayor comprensi\xf3n).")))),(0,n.kt)("h1",{id:"el-reto"},"EL RETO"),(0,n.kt)("p",null,"Como recordar\xe1n, el objetivo del bootcamp es lo siguiente:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Probar que podamos aprender dichas tecnolog\xedas en un tiempo reducido (es decir, que la curva de aprendizaje no sea demasiado alta).")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Identificar si nos gustar\xeda usar esta tecnolog\xeda para el proyecto de Casa Mosaico.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Identificar si esta tecnolog\xeda es capaz de cumplir con las necesidades del proyecto de Casa Mosaico.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"De ser posible, probar algunos aspectos de la arquitectura. Por el momento \xfanicamente he identificado que podemos probar cu\xe1l de ambas opciones (SQL y NoSQL) se puede adaptar m\xe1s a cambios de requisitos."))),(0,n.kt)("p",null,"Por lo tanto, su misi\xf3n, si deciden aceptarla, es crear un sitio sencillo que nos permita crear y elimitar tareas (un to-do list)."),(0,n.kt)("p",null,'B\xe1sicamente s\xf3lo necesitar\xe1n crear una base de datos, con una tabla que almacene las tareas, encontrar una manera de insertarlas, eliminarlas, y crear una interf\xe1z para que un "usuario" pueda usar el sitio.'),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},(0,n.kt)("strong",{parentName:"p"},"RETO DE PRUEBA DE ARQUITECTURA:")," Una vez que hayas terminado el sitio b\xe1sico del to-do list (es decir, las instrucciones que justo se mencionaron), intenta cambiar la estructura general del back. Una manera de hacer esto es haciendo que existan usuarios, y que cada usuario tenga su propia lista y nadie m\xe1s pueda verla. Esto debes hacerlo sin eliminar en ning\xfan momento las tablas (es decir, no puedes copiarlas, eliminar lo que ten\xedas, y crear una nueva pegando los datos que ten\xedas anteriormente). En otras palabras, intenta cambiarle el motor al coche mientras est\xe1 en movimiento, sin apagarlo ni desconectarlo jeje.")),(0,n.kt)("h2",{id:"mensaje-motivador"},'Mensaje "motivador"'),(0,n.kt)("p",null,"Recordemos que esta tecnolog\xeda fue sugerida por el profe Lalo, y es la que usa para sus clases de ",(0,n.kt)("strong",{parentName:"p"},"BLOQUE 1")," (una manera muy sut\xedl de decir que si no podemos aprender a usar esto, estamos m\xe1s weyes que esos weyes)."),(0,n.kt)("h2",{id:"mucha-suerte-y-ojal\xe1-disfruten-el-experimento-"},"Mucha suerte y ojal\xe1 disfruten el experimento :)"),(0,n.kt)("h1",{id:"recursos-consultados"},"Recursos Consultados"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.digitalocean.com/community/tutorials/nodejs-express-basics"},"How to Get Started With Node.js and Express"))))}m.isMDXComponent=!0}}]);