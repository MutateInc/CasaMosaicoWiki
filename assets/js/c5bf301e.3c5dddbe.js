"use strict";(self.webpackChunkwiki=self.webpackChunkwiki||[]).push([[418],{3905:function(e,n,r){r.d(n,{Zo:function(){return d},kt:function(){return m}});var a=r(7294);function t(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){t(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function i(e,n){if(null==e)return{};var r,a,t=function(e,n){if(null==e)return{};var r,a,t={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],n.indexOf(r)>=0||(t[r]=e[r]);return t}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(t[r]=e[r])}return t}var c=a.createContext({}),l=function(e){var n=a.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):s(s({},n),e)),r},d=function(e){var n=l(e.components);return a.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var r=e.components,t=e.mdxType,o=e.originalType,c=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=l(r),m=t,b=p["".concat(c,".").concat(m)]||p[m]||u[m]||o;return r?a.createElement(b,s(s({ref:n},d),{},{components:r})):a.createElement(b,s({ref:n},d))}));function m(e,n){var r=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var o=r.length,s=new Array(o);s[0]=p;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:t,s[1]=i;for(var l=2;l<o;l++)s[l]=r[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}p.displayName="MDXCreateElement"},5985:function(e,n,r){r.r(n),r.d(n,{assets:function(){return d},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return u}});var a=r(7462),t=r(3366),o=(r(7294),r(3905)),s=["components"],i={},c="Est\xe1ndares de C\xf3digo",l={unversionedId:"EstandaresCodigo",id:"EstandaresCodigo",title:"Est\xe1ndares de C\xf3digo",description:"Para indentaciones y orden de l\xedneas usaremos el est\xe1ndar proporcionado por el plugin Prettier, ya que simplifica el seguir el est\xe1ndar y automatiza su verificaci\xf3n.",source:"@site/docs/EstandaresCodigo.md",sourceDirName:".",slug:"/EstandaresCodigo",permalink:"/CasaMosaicoWiki/docs/EstandaresCodigo",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/EstandaresCodigo.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Taco Thursday",permalink:"/CasaMosaicoWiki/docs/Architecture Spikes/AS_2"},next:{title:"Arquitectura de Soluci\xf3n de Casa Mosaico",permalink:"/CasaMosaicoWiki/docs/Manual de Arquitectura/Resumen"}},d={},u=[{value:"Convenciones de Nombres",id:"convenciones-de-nombres",level:2},{value:"Est\xe1ndar de documentaci\xf3n",id:"est\xe1ndar-de-documentaci\xf3n",level:2}],p={toc:u};function m(e){var n=e.components,r=(0,t.Z)(e,s);return(0,o.kt)("wrapper",(0,a.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"est\xe1ndares-de-c\xf3digo"},"Est\xe1ndares de C\xf3digo"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Para indentaciones y orden de l\xedneas usaremos el est\xe1ndar proporcionado por el plugin Prettier, ya que simplifica el seguir el est\xe1ndar y automatiza su verificaci\xf3n.")),(0,o.kt)("h2",{id:"convenciones-de-nombres"},"Convenciones de Nombres"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Las variables deben nombrarse usando camelcase, comenzando con letras min\xfasculas (por ejemplo, localData), mientras que los nombres de variables globales deben comenzar con una letra may\xfascula (por ejemplo, GlobalData)."),(0,o.kt)("li",{parentName:"ul"},"Los nombres de constantes deben formarse con todas las letras may\xfasculas (por ejemplo, CONSDATA)."),(0,o.kt)("li",{parentName:"ul"},"Los nombres de las variables deben de ser significativos para comprender el motivo de su uso y hay que evitar el uso de d\xedgitos."),(0,o.kt)("li",{parentName:"ul"},"Las funciones deben describir el motivo de su uso de manera clara y breve y debe escribirse en camelcase comenzando con letras min\xfasculas (por ejemplo, guardarFuncion)."),(0,o.kt)("li",{parentName:"ul"},"Al momento de declarar una colecci\xf3n, arreglos o estructura de datos de m\xfaltiples objetos, esta debe de ser declarada en plural, as\xed mismo, al declarar una estructura individual, esta debe de ser declarada en singular."),(0,o.kt)("li",{parentName:"ul"},"Todos los nombres deber\xe1n estar en ingl\xe9s, a excepci\xf3n de si dicho nombre ser\xe1 visualizado en el sistema, en cuyo caso deber\xe1 estar en espa\xf1ol. Ejemplo de esto son los nombres de campos en la base de datos; ya que estos nombres son obtenidos y desplegados, deber\xe1n estar en espa\xf1ol.")),(0,o.kt)("h2",{id:"est\xe1ndar-de-documentaci\xf3n"},"Est\xe1ndar de documentaci\xf3n"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"En archivos API (db.js y auth.js) las funciones deber\xe1n estar documentadas con el est\xe1ndar JSDOC, ya que esto permite que el autocomplete de los editores de c\xf3digo visualicen dicha documentaci\xf3n al usar las funciones."),(0,o.kt)("li",{parentName:"ul"},"En archivos que no sean APIs, las funciones con nombres que no describan su prop\xf3sito deben ser documentadas, en la documentaci\xf3n se deben definir el prop\xf3sito y las entradas y salidas de la funci\xf3n.")))}m.isMDXComponent=!0}}]);